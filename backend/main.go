package main

import (
	"context"
	"log"
	"os"
	"os/signal"

	"github.com/go-telegram/bot"
	"github.com/go-telegram/bot/models"
	"github.com/joho/godotenv"
)

func main() {
	// –ó–∞–≥—Ä—É–∂–∞–µ–º .env
	err := godotenv.Load("../.env")
	if err != nil {
		log.Fatal("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ .env —Ñ–∞–π–ª–∞")
	}

	token := os.Getenv("TOKEN_BOT")
	if token == "" {
		log.Fatal("TOKEN_BOT –Ω–µ –Ω–∞–π–¥–µ–Ω")
	}

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ Ctrl+C
	ctx, cancel := signal.NotifyContext(context.Background(), os.Interrupt)
	defer cancel()

	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
	b, err := bot.New(token, bot.WithDefaultHandler(handler))
	if err != nil {
		log.Fatal(err)
	}

	log.Println("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
	b.Start(ctx)
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
func handler(ctx context.Context, b *bot.Bot, update *models.Update) {
	if update.Message != nil {
		b.SendMessage(ctx, &bot.SendMessageParams{
			ChatID: update.Message.Chat.ID,
			Text:   "–ü—Ä–∏–≤–µ—Ç! ü§ñ",
		})
	}
}
